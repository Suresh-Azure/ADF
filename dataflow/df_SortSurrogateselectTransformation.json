{
	"name": "df_SortSurrogateselectTransformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emptable",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_empdept_blob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DeptSorting"
				},
				{
					"name": "SurrogateRowNO"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPNO as integer,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as decimal(4,0),",
				"          HIREDATE as timestamp,",
				"          SAL as decimal(7,2),",
				"          COMM as decimal(7,2),",
				"          DEPTNO as decimal(2,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     partitionBy('hash', 1)) ~> EmpData",
				"EmpData sort(asc(JOB, false),",
				"     desc(SAL, false),",
				"     partitionBy('hash', 1)) ~> DeptSorting",
				"DeptSorting keyGenerate(output(ROW_NO as long),",
				"     startAt: 1L,",
				"     stepValue: 1L,",
				"     partitionBy('hash', 1)) ~> SurrogateRowNO",
				"SurrogateRowNO select(mapColumn(",
				"          Row_NO = ROW_NO,",
				"          ENAME,",
				"          JOB,",
				"          MGR,",
				"          SAL,",
				"          COMM,",
				"          DEPTNO,",
				"          EMP_NO = EMPNO",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}